/*
 * generated by Xtext 2.23.0
 */
grammar InternalToy;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package fr.unice.polytech.si5.toylanguage.concretesyntax.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package fr.unice.polytech.si5.toylanguage.concretesyntax.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import fr.unice.polytech.si5.toylanguage.concretesyntax.services.ToyGrammarAccess;

}
@parser::members {
	private ToyGrammarAccess grammarAccess;

	public void setGrammarAccess(ToyGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleToyProgram
entryRuleToyProgram
:
{ before(grammarAccess.getToyProgramRule()); }
	 ruleToyProgram
{ after(grammarAccess.getToyProgramRule()); } 
	 EOF 
;

// Rule ToyProgram
ruleToyProgram 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getToyProgramAccess().getGroup()); }
		(rule__ToyProgram__Group__0)
		{ after(grammarAccess.getToyProgramAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatement
entryRuleStatement
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementAccess().getAlternatives()); }
		(rule__Statement__Alternatives)
		{ after(grammarAccess.getStatementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperation
entryRuleOperation
:
{ before(grammarAccess.getOperationRule()); }
	 ruleOperation
{ after(grammarAccess.getOperationRule()); } 
	 EOF 
;

// Rule Operation
ruleOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperationAccess().getAlternatives()); }
		(rule__Operation__Alternatives)
		{ after(grammarAccess.getOperationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getAlternatives()); }
		(rule__EString__Alternatives)
		{ after(grammarAccess.getEStringAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariable
entryRuleVariable
:
{ before(grammarAccess.getVariableRule()); }
	 ruleVariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule Variable
ruleVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableAccess().getGroup()); }
		(rule__Variable__Group__0)
		{ after(grammarAccess.getVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEDouble
entryRuleEDouble
:
{ before(grammarAccess.getEDoubleRule()); }
	 ruleEDouble
{ after(grammarAccess.getEDoubleRule()); } 
	 EOF 
;

// Rule EDouble
ruleEDouble 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEDoubleAccess().getGroup()); }
		(rule__EDouble__Group__0)
		{ after(grammarAccess.getEDoubleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAddition
entryRuleAddition
:
{ before(grammarAccess.getAdditionRule()); }
	 ruleAddition
{ after(grammarAccess.getAdditionRule()); } 
	 EOF 
;

// Rule Addition
ruleAddition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAdditionAccess().getGroup()); }
		(rule__Addition__Group__0)
		{ after(grammarAccess.getAdditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSoustraction
entryRuleSoustraction
:
{ before(grammarAccess.getSoustractionRule()); }
	 ruleSoustraction
{ after(grammarAccess.getSoustractionRule()); } 
	 EOF 
;

// Rule Soustraction
ruleSoustraction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSoustractionAccess().getGroup()); }
		(rule__Soustraction__Group__0)
		{ after(grammarAccess.getSoustractionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssignment
entryRuleAssignment
:
{ before(grammarAccess.getAssignmentRule()); }
	 ruleAssignment
{ after(grammarAccess.getAssignmentRule()); } 
	 EOF 
;

// Rule Assignment
ruleAssignment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssignmentAccess().getGroup()); }
		(rule__Assignment__Group__0)
		{ after(grammarAccess.getAssignmentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParallelAssignment
entryRuleParallelAssignment
:
{ before(grammarAccess.getParallelAssignmentRule()); }
	 ruleParallelAssignment
{ after(grammarAccess.getParallelAssignmentRule()); } 
	 EOF 
;

// Rule ParallelAssignment
ruleParallelAssignment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParallelAssignmentAccess().getGroup()); }
		(rule__ParallelAssignment__Group__0)
		{ after(grammarAccess.getParallelAssignmentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule VarType
ruleVarType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarTypeAccess().getAlternatives()); }
		(rule__VarType__Alternatives)
		{ after(grammarAccess.getVarTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getOperationParserRuleCall_0()); }
		ruleOperation
		{ after(grammarAccess.getStatementAccess().getOperationParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getAssignmentParserRuleCall_1()); }
		ruleAssignment
		{ after(grammarAccess.getStatementAccess().getAssignmentParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getParallelAssignmentParserRuleCall_2()); }
		ruleParallelAssignment
		{ after(grammarAccess.getStatementAccess().getParallelAssignmentParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationAccess().getAdditionParserRuleCall_0()); }
		ruleAddition
		{ after(grammarAccess.getOperationAccess().getAdditionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperationAccess().getSoustractionParserRuleCall_1()); }
		ruleSoustraction
		{ after(grammarAccess.getOperationAccess().getSoustractionParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
		RULE_ID
		{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Alternatives_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEDoubleAccess().getEKeyword_4_0_0()); }
		'E'
		{ after(grammarAccess.getEDoubleAccess().getEKeyword_4_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getEDoubleAccess().getEKeyword_4_0_1()); }
		'e'
		{ after(grammarAccess.getEDoubleAccess().getEKeyword_4_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getGroup_1_0()); }
		(rule__Assignment__Group_1_0__0)
		{ after(grammarAccess.getAssignmentAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getAssignmentAccess().getGroup_1_1()); }
		(rule__Assignment__Group_1_1__0)
		{ after(grammarAccess.getAssignmentAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarTypeAccess().getIntEnumLiteralDeclaration_0()); }
		('int')
		{ after(grammarAccess.getVarTypeAccess().getIntEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getVarTypeAccess().getDoubleEnumLiteralDeclaration_1()); }
		('double')
		{ after(grammarAccess.getVarTypeAccess().getDoubleEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ToyProgram__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ToyProgram__Group__0__Impl
	rule__ToyProgram__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ToyProgram__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getToyProgramAccess().getToyProgramAction_0()); }
	()
	{ after(grammarAccess.getToyProgramAccess().getToyProgramAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ToyProgram__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ToyProgram__Group__1__Impl
	rule__ToyProgram__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ToyProgram__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getToyProgramAccess().getProgramKeyword_1()); }
	'program'
	{ after(grammarAccess.getToyProgramAccess().getProgramKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ToyProgram__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ToyProgram__Group__2__Impl
	rule__ToyProgram__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ToyProgram__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getToyProgramAccess().getNameAssignment_2()); }
	(rule__ToyProgram__NameAssignment_2)
	{ after(grammarAccess.getToyProgramAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ToyProgram__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ToyProgram__Group__3__Impl
	rule__ToyProgram__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ToyProgram__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getToyProgramAccess().getOwnedVariablesAssignment_3()); }
	(rule__ToyProgram__OwnedVariablesAssignment_3)*
	{ after(grammarAccess.getToyProgramAccess().getOwnedVariablesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ToyProgram__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ToyProgram__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ToyProgram__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getToyProgramAccess().getOwnedStatementsAssignment_4()); }
	(rule__ToyProgram__OwnedStatementsAssignment_4)*
	{ after(grammarAccess.getToyProgramAccess().getOwnedStatementsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__0__Impl
	rule__Variable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getVariableAction_0()); }
	()
	{ after(grammarAccess.getVariableAccess().getVariableAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__1__Impl
	rule__Variable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getVarKeyword_1()); }
	'Var'
	{ after(grammarAccess.getVariableAccess().getVarKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__2__Impl
	rule__Variable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getNameAssignment_2()); }
	(rule__Variable__NameAssignment_2)
	{ after(grammarAccess.getVariableAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__3__Impl
	rule__Variable__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getVariableAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__4__Impl
	rule__Variable__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getTypeAssignment_4()); }
	(rule__Variable__TypeAssignment_4)
	{ after(grammarAccess.getVariableAccess().getTypeAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__5__Impl
	rule__Variable__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getEqualsSignKeyword_5()); }
	'='
	{ after(grammarAccess.getVariableAccess().getEqualsSignKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__6__Impl
	rule__Variable__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getInitialValueAssignment_6()); }
	(rule__Variable__InitialValueAssignment_6)
	{ after(grammarAccess.getVariableAccess().getInitialValueAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getSemicolonKeyword_7()); }
	(';')?
	{ after(grammarAccess.getVariableAccess().getSemicolonKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EDouble__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EDouble__Group__0__Impl
	rule__EDouble__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEDoubleAccess().getHyphenMinusKeyword_0()); }
	('-')?
	{ after(grammarAccess.getEDoubleAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EDouble__Group__1__Impl
	rule__EDouble__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_1()); }
	(RULE_INT)?
	{ after(grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EDouble__Group__2__Impl
	rule__EDouble__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEDoubleAccess().getFullStopKeyword_2()); }
	'.'
	{ after(grammarAccess.getEDoubleAccess().getFullStopKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EDouble__Group__3__Impl
	rule__EDouble__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_3()); }
	RULE_INT
	{ after(grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EDouble__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEDoubleAccess().getGroup_4()); }
	(rule__EDouble__Group_4__0)?
	{ after(grammarAccess.getEDoubleAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EDouble__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EDouble__Group_4__0__Impl
	rule__EDouble__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEDoubleAccess().getAlternatives_4_0()); }
	(rule__EDouble__Alternatives_4_0)
	{ after(grammarAccess.getEDoubleAccess().getAlternatives_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EDouble__Group_4__1__Impl
	rule__EDouble__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEDoubleAccess().getHyphenMinusKeyword_4_1()); }
	('-')?
	{ after(grammarAccess.getEDoubleAccess().getHyphenMinusKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EDouble__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_4_2()); }
	RULE_INT
	{ after(grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Addition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Addition__Group__0__Impl
	rule__Addition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionAccess().getGroup_0()); }
	(rule__Addition__Group_0__0)?
	{ after(grammarAccess.getAdditionAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Addition__Group__1__Impl
	rule__Addition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getAdditionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Addition__Group__2__Impl
	rule__Addition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionAccess().getLeftVariableAssignment_2()); }
	(rule__Addition__LeftVariableAssignment_2)
	{ after(grammarAccess.getAdditionAccess().getLeftVariableAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Addition__Group__3__Impl
	rule__Addition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionAccess().getPlusSignKeyword_3()); }
	'+'
	{ after(grammarAccess.getAdditionAccess().getPlusSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Addition__Group__4__Impl
	rule__Addition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionAccess().getRightVariableAssignment_4()); }
	(rule__Addition__RightVariableAssignment_4)
	{ after(grammarAccess.getAdditionAccess().getRightVariableAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Addition__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getAdditionAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Addition__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Addition__Group_0__0__Impl
	rule__Addition__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionAccess().getNameAssignment_0_0()); }
	(rule__Addition__NameAssignment_0_0)
	{ after(grammarAccess.getAdditionAccess().getNameAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Addition__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionAccess().getHyphenMinusGreaterThanSignKeyword_0_1()); }
	'->'
	{ after(grammarAccess.getAdditionAccess().getHyphenMinusGreaterThanSignKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Soustraction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Soustraction__Group__0__Impl
	rule__Soustraction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Soustraction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSoustractionAccess().getGroup_0()); }
	(rule__Soustraction__Group_0__0)?
	{ after(grammarAccess.getSoustractionAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Soustraction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Soustraction__Group__1__Impl
	rule__Soustraction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Soustraction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSoustractionAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getSoustractionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Soustraction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Soustraction__Group__2__Impl
	rule__Soustraction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Soustraction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSoustractionAccess().getLeftVariableAssignment_2()); }
	(rule__Soustraction__LeftVariableAssignment_2)
	{ after(grammarAccess.getSoustractionAccess().getLeftVariableAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Soustraction__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Soustraction__Group__3__Impl
	rule__Soustraction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Soustraction__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSoustractionAccess().getHyphenMinusKeyword_3()); }
	'-'
	{ after(grammarAccess.getSoustractionAccess().getHyphenMinusKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Soustraction__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Soustraction__Group__4__Impl
	rule__Soustraction__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Soustraction__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSoustractionAccess().getRightVariableAssignment_4()); }
	(rule__Soustraction__RightVariableAssignment_4)
	{ after(grammarAccess.getSoustractionAccess().getRightVariableAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Soustraction__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Soustraction__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Soustraction__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSoustractionAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getSoustractionAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Soustraction__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Soustraction__Group_0__0__Impl
	rule__Soustraction__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Soustraction__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSoustractionAccess().getNameAssignment_0_0()); }
	(rule__Soustraction__NameAssignment_0_0)
	{ after(grammarAccess.getSoustractionAccess().getNameAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Soustraction__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Soustraction__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Soustraction__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSoustractionAccess().getHyphenMinusGreaterThanSignKeyword_0_1()); }
	'->'
	{ after(grammarAccess.getSoustractionAccess().getHyphenMinusGreaterThanSignKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__0__Impl
	rule__Assignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getGroup_0()); }
	(rule__Assignment__Group_0__0)?
	{ after(grammarAccess.getAssignmentAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getAlternatives_1()); }
	(rule__Assignment__Alternatives_1)
	{ after(grammarAccess.getAssignmentAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group_0__0__Impl
	rule__Assignment__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getNameAssignment_0_0()); }
	(rule__Assignment__NameAssignment_0_0)
	{ after(grammarAccess.getAssignmentAccess().getNameAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getHyphenMinusGreaterThanSignKeyword_0_1()); }
	'->'
	{ after(grammarAccess.getAssignmentAccess().getHyphenMinusGreaterThanSignKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group_1_0__0__Impl
	rule__Assignment__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getAssignKeyword_1_0_0()); }
	'Assign'
	{ after(grammarAccess.getAssignmentAccess().getAssignKeyword_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group_1_0__1__Impl
	rule__Assignment__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getVariableAssignment_1_0_1()); }
	(rule__Assignment__VariableAssignment_1_0_1)
	{ after(grammarAccess.getAssignmentAccess().getVariableAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group_1_0__2__Impl
	rule__Assignment__Group_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getWithKeyword_1_0_2()); }
	'with'
	{ after(grammarAccess.getAssignmentAccess().getWithKeyword_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_1_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group_1_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_1_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getOperationAssignment_1_0_3()); }
	(rule__Assignment__OperationAssignment_1_0_3)
	{ after(grammarAccess.getAssignmentAccess().getOperationAssignment_1_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group_1_1__0__Impl
	rule__Assignment__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getVariableAssignment_1_1_0()); }
	(rule__Assignment__VariableAssignment_1_1_0)
	{ after(grammarAccess.getAssignmentAccess().getVariableAssignment_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group_1_1__1__Impl
	rule__Assignment__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getColonEqualsSignKeyword_1_1_1()); }
	':='
	{ after(grammarAccess.getAssignmentAccess().getColonEqualsSignKeyword_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getOperationAssignment_1_1_2()); }
	(rule__Assignment__OperationAssignment_1_1_2)
	{ after(grammarAccess.getAssignmentAccess().getOperationAssignment_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParallelAssignment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParallelAssignment__Group__0__Impl
	rule__ParallelAssignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParallelAssignment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParallelAssignmentAccess().getGroup_0()); }
	(rule__ParallelAssignment__Group_0__0)?
	{ after(grammarAccess.getParallelAssignmentAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParallelAssignment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParallelAssignment__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParallelAssignment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParallelAssignmentAccess().getGroup_1()); }
	(rule__ParallelAssignment__Group_1__0)
	{ after(grammarAccess.getParallelAssignmentAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParallelAssignment__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParallelAssignment__Group_0__0__Impl
	rule__ParallelAssignment__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParallelAssignment__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParallelAssignmentAccess().getNameAssignment_0_0()); }
	(rule__ParallelAssignment__NameAssignment_0_0)
	{ after(grammarAccess.getParallelAssignmentAccess().getNameAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParallelAssignment__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParallelAssignment__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParallelAssignment__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParallelAssignmentAccess().getHyphenMinusGreaterThanSignKeyword_0_1()); }
	'->'
	{ after(grammarAccess.getParallelAssignmentAccess().getHyphenMinusGreaterThanSignKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParallelAssignment__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParallelAssignment__Group_1__0__Impl
	rule__ParallelAssignment__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParallelAssignment__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParallelAssignmentAccess().getLeftSquareBracketKeyword_1_0()); }
	'['
	{ after(grammarAccess.getParallelAssignmentAccess().getLeftSquareBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParallelAssignment__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParallelAssignment__Group_1__1__Impl
	rule__ParallelAssignment__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParallelAssignment__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParallelAssignmentAccess().getOwnedAssignmentsAssignment_1_1()); }
	(rule__ParallelAssignment__OwnedAssignmentsAssignment_1_1)
	{ after(grammarAccess.getParallelAssignmentAccess().getOwnedAssignmentsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParallelAssignment__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParallelAssignment__Group_1__2__Impl
	rule__ParallelAssignment__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ParallelAssignment__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getParallelAssignmentAccess().getGroup_1_2()); }
		(rule__ParallelAssignment__Group_1_2__0)
		{ after(grammarAccess.getParallelAssignmentAccess().getGroup_1_2()); }
	)
	(
		{ before(grammarAccess.getParallelAssignmentAccess().getGroup_1_2()); }
		(rule__ParallelAssignment__Group_1_2__0)*
		{ after(grammarAccess.getParallelAssignmentAccess().getGroup_1_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParallelAssignment__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParallelAssignment__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParallelAssignment__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParallelAssignmentAccess().getRightSquareBracketKeyword_1_3()); }
	']'
	{ after(grammarAccess.getParallelAssignmentAccess().getRightSquareBracketKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParallelAssignment__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParallelAssignment__Group_1_2__0__Impl
	rule__ParallelAssignment__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParallelAssignment__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParallelAssignmentAccess().getVerticalLineKeyword_1_2_0()); }
	'|'
	{ after(grammarAccess.getParallelAssignmentAccess().getVerticalLineKeyword_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParallelAssignment__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParallelAssignment__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParallelAssignment__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParallelAssignmentAccess().getOwnedAssignmentsAssignment_1_2_1()); }
	(rule__ParallelAssignment__OwnedAssignmentsAssignment_1_2_1)
	{ after(grammarAccess.getParallelAssignmentAccess().getOwnedAssignmentsAssignment_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ToyProgram__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getToyProgramAccess().getNameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getToyProgramAccess().getNameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ToyProgram__OwnedVariablesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getToyProgramAccess().getOwnedVariablesVariableParserRuleCall_3_0()); }
		ruleVariable
		{ after(grammarAccess.getToyProgramAccess().getOwnedVariablesVariableParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ToyProgram__OwnedStatementsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getToyProgramAccess().getOwnedStatementsStatementParserRuleCall_4_0()); }
		ruleStatement
		{ after(grammarAccess.getToyProgramAccess().getOwnedStatementsStatementParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getNameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getVariableAccess().getNameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__TypeAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getTypeVarTypeEnumRuleCall_4_0()); }
		ruleVarType
		{ after(grammarAccess.getVariableAccess().getTypeVarTypeEnumRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__InitialValueAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getInitialValueEDoubleParserRuleCall_6_0()); }
		ruleEDouble
		{ after(grammarAccess.getVariableAccess().getInitialValueEDoubleParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__NameAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditionAccess().getNameIDTerminalRuleCall_0_0_0()); }
		RULE_ID
		{ after(grammarAccess.getAdditionAccess().getNameIDTerminalRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__LeftVariableAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditionAccess().getLeftVariableVariableCrossReference_2_0()); }
		(
			{ before(grammarAccess.getAdditionAccess().getLeftVariableVariableEStringParserRuleCall_2_0_1()); }
			ruleEString
			{ after(grammarAccess.getAdditionAccess().getLeftVariableVariableEStringParserRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getAdditionAccess().getLeftVariableVariableCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__RightVariableAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditionAccess().getRightVariableVariableCrossReference_4_0()); }
		(
			{ before(grammarAccess.getAdditionAccess().getRightVariableVariableEStringParserRuleCall_4_0_1()); }
			ruleEString
			{ after(grammarAccess.getAdditionAccess().getRightVariableVariableEStringParserRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getAdditionAccess().getRightVariableVariableCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Soustraction__NameAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSoustractionAccess().getNameIDTerminalRuleCall_0_0_0()); }
		RULE_ID
		{ after(grammarAccess.getSoustractionAccess().getNameIDTerminalRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Soustraction__LeftVariableAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSoustractionAccess().getLeftVariableVariableCrossReference_2_0()); }
		(
			{ before(grammarAccess.getSoustractionAccess().getLeftVariableVariableEStringParserRuleCall_2_0_1()); }
			ruleEString
			{ after(grammarAccess.getSoustractionAccess().getLeftVariableVariableEStringParserRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getSoustractionAccess().getLeftVariableVariableCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Soustraction__RightVariableAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSoustractionAccess().getRightVariableVariableCrossReference_4_0()); }
		(
			{ before(grammarAccess.getSoustractionAccess().getRightVariableVariableEStringParserRuleCall_4_0_1()); }
			ruleEString
			{ after(grammarAccess.getSoustractionAccess().getRightVariableVariableEStringParserRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getSoustractionAccess().getRightVariableVariableCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__NameAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getNameIDTerminalRuleCall_0_0_0()); }
		RULE_ID
		{ after(grammarAccess.getAssignmentAccess().getNameIDTerminalRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__VariableAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getVariableVariableCrossReference_1_0_1_0()); }
		(
			{ before(grammarAccess.getAssignmentAccess().getVariableVariableEStringParserRuleCall_1_0_1_0_1()); }
			ruleEString
			{ after(grammarAccess.getAssignmentAccess().getVariableVariableEStringParserRuleCall_1_0_1_0_1()); }
		)
		{ after(grammarAccess.getAssignmentAccess().getVariableVariableCrossReference_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__OperationAssignment_1_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getOperationOperationParserRuleCall_1_0_3_0()); }
		ruleOperation
		{ after(grammarAccess.getAssignmentAccess().getOperationOperationParserRuleCall_1_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__VariableAssignment_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getVariableVariableCrossReference_1_1_0_0()); }
		(
			{ before(grammarAccess.getAssignmentAccess().getVariableVariableEStringParserRuleCall_1_1_0_0_1()); }
			ruleEString
			{ after(grammarAccess.getAssignmentAccess().getVariableVariableEStringParserRuleCall_1_1_0_0_1()); }
		)
		{ after(grammarAccess.getAssignmentAccess().getVariableVariableCrossReference_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__OperationAssignment_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getOperationOperationParserRuleCall_1_1_2_0()); }
		ruleOperation
		{ after(grammarAccess.getAssignmentAccess().getOperationOperationParserRuleCall_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParallelAssignment__NameAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParallelAssignmentAccess().getNameIDTerminalRuleCall_0_0_0()); }
		RULE_ID
		{ after(grammarAccess.getParallelAssignmentAccess().getNameIDTerminalRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParallelAssignment__OwnedAssignmentsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParallelAssignmentAccess().getOwnedAssignmentsAssignmentParserRuleCall_1_1_0()); }
		ruleAssignment
		{ after(grammarAccess.getParallelAssignmentAccess().getOwnedAssignmentsAssignmentParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParallelAssignment__OwnedAssignmentsAssignment_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParallelAssignmentAccess().getOwnedAssignmentsAssignmentParserRuleCall_1_2_1_0()); }
		ruleAssignment
		{ after(grammarAccess.getParallelAssignmentAccess().getOwnedAssignmentsAssignmentParserRuleCall_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
